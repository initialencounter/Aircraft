name: Release Aircraft

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

permissions: write-all
env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        shell: bash
        run: |
          echo "using version tag ${GITHUB_REF:11}"
          echo "version=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@1.86.0

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Cargo cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: yarn install
        run: |
          yarn install --frozen-lockfile

      - name: Build bindings
        run: |
          cd bindings/node
          yarn build
          cd ../../
          yarn build:v

      - name: Build electron
        run: |
          cd electron
          yarn build:frontend
          npm run build:app

      - name: Build Tauri-lite
        run: |
          yarn build:t

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            target/release/bundle/msi/aircraft_${{ env.version }}_x64_zh-CN.msi
            electron/release/${{ env.version }}/aircraft_${{ env.version }}_electron_x64-setup.exe
          name: 'Aircraft ${{ env.version }}'
